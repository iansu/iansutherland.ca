---
import { GoogleAnalytics } from 'astro-analytics';

import CommandPalette from '@components/command-palette';
import { getTitle, getDescription } from '@lib/meta';

import '../styles/global.css';

export interface Props {
  title?: string;
  description?: string;
  noIndex?: boolean;
  noFollow?: boolean;
}

const title = getTitle(Astro.props.title);
const description = getDescription(Astro.props.description);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const noIndex = Astro.props.noIndex === undefined ? false : Astro.props.noIndex;
const noFollow = Astro.props.noFollow === undefined ? false : Astro.props.noFollow;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    {noIndex && noFollow && <meta name="robots" content="noindex,nofollow" />}
    {noFollow && !noIndex && <meta name="robots" content="noindex" />}
    {noIndex && !noFollow && <meta name="robots" content="noindex" />}
    <meta property="og:url" content="https://iansutherland.ca/" />
    <meta property="og:type" content="website" />
    <meta property="og:locale" content="en" />
    <meta property="og:site_name" content="Ian Sutherland" />
    <meta property="og:image" content="https://iansutherland.ca/ian-sutherland-logo.png" />
    <meta property="og:image:width" content="512" />
    <meta property="og:image:height" content="512" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:site" content="iansu" />
    <link rel="canonical" href={canonicalURL} />
    <link rel="icon" href="/favicon.ico" />
    <title>{title}</title>
    <GoogleAnalytics id="UA-156492295-1" />
  </head>
  <body class="bg-white transition duration-200 dark:bg-black">
    <CommandPalette client:only="react" />
    <slot />
    <script>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme') || 'light';
        }

        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }

        return 'light';
      })();

      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
    </script>
  </body>
</html>
